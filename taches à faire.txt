fonction pour gerer le score
fonction pour sauvegarder les etapes (liste de matrrice peut etre)
fonction pour quitter
fonction pour nouvelle partie
fonction pour best (creer une liste de score associé à chaque partie)
fonction/classe pour la communication entre QML & C++
structure de la grille: matrice de taille modifiable ( sinon autres idées)
logique du jeu, ie: haut bas droite gauche fusion
fonctions/variable de test pour les "cellules" associé à la matrice
fonctions/tests gagné et perdu

// d'autres classes à définir si besoin

// documntation pour le moment (à rajouter si utile)

model pour repeater: https://doc.qt.io/qt-5/qtquick-modelviewsdata-modelview.html#qml-data-models
----> solution trouvé: https://doc.qt.io/qt-5/qtquick-modelviewsdata-cppmodels.html
      paragraphe: QAbstractItemModel Subclass (voir exemple fait)
      """
       model can be defined by subclassing QAbstractItemModel. This is the best approach if you have a more complex model that cannot be supported by the other approaches. A QAbstractItemModel can also automatically notify a QML view when the model data changes.

The roles of a QAbstractItemModel subclass can be exposed to QML by reimplementing QAbstractItemModel::roleNames().

Here is an application with a QAbstractListModel subclass named AnimalModel, which exposes the type and sizes roles. It reimplements QAbstractItemModel::roleNames() to expose the role names, so that they can be accessed via QML:
      """
communication entre le Qml et c++
-----> solution trouvé: * Q_INVOKE pour lancer des méthodes c++ quand un bouton QML est cliqué.
                        * Q_PROPERTY pour synchroniser des attributes c++ avec des QML property.
 
https://doc.qt.io/archives/qt-4.8/qml-repeater.html
https://doc.qt.io/qt-5/qml-qtqml-qtobject.html
https://doc.qt.io/qt-5/qobject.html
https://doc.qt.io/qt-5/qml-qtquick-grid.html
https://doc.qt.io/qt-5/qtquick-modelviewsdata-cppmodels.html
https://doc.qt.io/qt-5/qabstractlistmodel.html
https://doc.qt.io/qt-5/qtqml-cppintegration-interactqmlfromcpp.html
